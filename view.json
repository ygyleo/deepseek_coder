{"path":"brenocfg\/AnghaBench\/freebsd\/contrib\/bearssl\/src\/ssl\/extr_ssl_ccert_single_rsa.c_cc_none2.c","func_def":"__attribute__((used)) static void\ncc_none2(const br_ssl_client_certificate_class **pctx,\n\tconst unsigned char *data, size_t len)\n{\n\t(void)pctx;\n\t(void)data;\n\t(void)len;\n}","func_head":"void cc_none2(const br_ssl_client_certificate_class **pctx, const unsigned char *data, size_tlen)","func_head_types":"void cc_none2(const br_ssl_client_certificate_class **pctx, const unsigned char *data, size_t len)","fname":"cc_none2","signature":["void","const br_ssl_client_certificate_class **","const unsigned char *","size_t"],"asm":{"code":[".globl cc_none2\n.type cc_none2, @function\ncc_none2:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\tpushq\t%rbp\n\t.cfi_def_cfa_offset 16\n\t.cfi_offset 6, -16\n\tmovq\t%rsp, %rbp\n\t.cfi_def_cfa_register 6\n\tmovq\t%rdi, -8(%rbp)\n\tmovq\t%rsi, -16(%rbp)\n\tmovq\t%rdx, -24(%rbp)\n\tnop\n\tpopq\t%rbp\n\t.cfi_def_cfa 7, 8\n\tret\n\t.cfi_endproc\n\n",".globl cc_none2\n.type cc_none2, @function\ncc_none2:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\tret\n\t.cfi_endproc\n\n",".globl cc_none2\n.type cc_none2, @function\ncc_none2:\n.LFB0:\n\t.cfi_startproc\n\tendbr64\n\tret\n\t.cfi_endproc\n\n",".global cc_none2\n.type cc_none2, %function\ncc_none2:\n.LFB0:\n\t.cfi_startproc\n\tsub\tsp, sp, #32\n\t.cfi_def_cfa_offset 32\n\tstr\tx0, [sp, 24]\n\tstr\tx1, [sp, 16]\n\tstr\tx2, [sp, 8]\n\tnop\n\tadd\tsp, sp, 32\n\t.cfi_def_cfa_offset 0\n\tret\n\t.cfi_endproc\n\n",".global cc_none2\n.type cc_none2, %function\ncc_none2:\n.LFB0:\n\t.cfi_startproc\n\tret\n\t.cfi_endproc\n\n",".global cc_none2\n.type cc_none2, %function\ncc_none2:\n.LFB0:\n\t.cfi_startproc\n\tret\n\t.cfi_endproc\n\n","\t.text\n\t.file\t\"exebench_ACT42_1694850xuqfr_7k.c\"\n\t.p2align\t4, 0x90                         # -- Begin function cc_none2\n\t.type\tcc_none2,@function\ncc_none2:                               # @cc_none2\n\t.cfi_startproc\n# %bb.0:\n\tretq\n.Lfunc_end0:\n\t.size\tcc_none2, .Lfunc_end0-cc_none2\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"clang version 15.0.0 (git@github.com:llvm\/llvm-project.git 4ba6a9c9f65bbc8bd06e3652cb20fd4dfc846137)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n","\t.text\n\t.file\t\"exebench_lscat-ACT41_2020645x8b9oqju.c\"\n\t.hidden\tcc_none2                        # -- Begin function cc_none2\n\t.globl\tcc_none2\n\t.p2align\t4, 0x90\n\t.type\tcc_none2,@function\ncc_none2:                               # @cc_none2\n\t.cfi_startproc\n# %bb.0:                                # %entry\n\tretq\n.Lfunc_end0:\n\t.size\tcc_none2, .Lfunc_end0-cc_none2\n\t.cfi_endproc\n                                        # -- End function\n\t.ident\t\"clang version 17.0.0 (https:\/\/github.com\/llvm\/llvm-project.git 88bf774c565080e30e0a073676c316ab175303af)\"\n\t.section\t\".note.GNU-stack\",\"\",@progbits\n"],"target":["angha_gcc_x86_O0","angha_gcc_x86_Os","angha_gcc_x86_O3","angha_gcc_arm_O0","angha_gcc_arm_Os","angha_gcc_arm_O3","clang15_x86_O2","clang15_x86-O2"]},"synth_deps":"#define NULL ((void*)0)\ntypedef unsigned long size_t;  \/\/ Customize by platform.\ntypedef long intptr_t; typedef unsigned long uintptr_t;\ntypedef long scalar_t__;  \/\/ Either arithmetic or pointer type.\n\/* By default, we understand bool (as a convenience). *\/\ntypedef int bool;\n#define false 0\n#define true 1\n\n\/* Forward declarations *\/\n\n\/* Type definitions *\/\ntypedef  int \/*<<< orphan*\/  br_ssl_client_certificate_class ;\n\n\/* Variables and functions *\/\n\n","real_deps":null,"synth_io_pairs":{"dummy_funcs":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"dummy_funcs_seed":[0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2],"input":[{"value":["[44, 79, 65, 56, 108, 0, 27, 61, 103, 85, 88, 100, 45, 42, 17, 22, 84, 82, 65, 8, 7, 11, 72, 57, 119, 35, 87, 30, 6, 40, 49, 54]","720","808"],"var":["pctx","data","len"]},{"value":["[26, 78, 106, 98, 54, 9, 51, 89, 46, 90, 104, 79, 57, 32, 4, 119, 16, 36, 64, 72, 8, 120, 120, 11, 49, 81, 118, 109, 75, 68, 19, 83]","969","369"],"var":["pctx","data","len"]},{"value":["[118, 104, 13, 76, 74, 38, 113, 110, 7, 9, 36, 20, 41, 40, 30, 67, 76, 72, 63, 113, 45, 55, 56, 123, 30, 88, 28, 62, 99, 66, 55, 21]","748","962"],"var":["pctx","data","len"]},{"value":["[111, 50, 40, 61, 6, 61, 24, 55, 96, 25, 13, 78, 46, 77, 123, 22, 66, 124, 120, 24, 45, 85, 48, 55, 72, 1, 93, 76, 82, 95, 26, 19]","509","543"],"var":["pctx","data","len"]},{"value":["[84, 46, 73, 29, 61, 76, 45, 103, 16, 38, 27, 62, 105, 50, 105, 89, 39, 18, 79, 91, 92, 66, 103, 86, 22, 16, 104, 23, 64, 26, 30, 118]","994","386"],"var":["pctx","data","len"]},{"value":["[99, 3, 53, 49, 82, 118, 107, 2, 99, 106, 33, 28, 13, 94, 7, 79, 35, 25, 39, 121, 42, 15, 61, 103, 94, 108, 50, 92, 70, 113, 36, 67]","738","981"],"var":["pctx","data","len"]},{"value":["[85, 74, 71, 28, 78, 9, 5, 106, 71, 40, 92, 68, 33, 28, 106, 76, 39, 34, 5, 73, 69, 126, 36, 39, 47, 12, 32, 92, 34, 48, 99, 67]","73","713"],"var":["pctx","data","len"]},{"value":["[105, 103, 112, 109, 35, 56, 21, 125, 122, 116, 92, 102, 49, 68, 52, 53, 76, 111, 35, 46, 52, 19, 99, 108, 45, 83, 49, 80, 98, 92, 69, 23]","99","719"],"var":["pctx","data","len"]},{"value":["[114, 14, 19, 73, 74, 37, 74, 113, 95, 85, 37, 94, 123, 2, 27, 35, 122, 91, 15, 15, 16, 87, 2, 27, 32, 90, 84, 118, 22, 14, 115, 120]","876","790"],"var":["pctx","data","len"]},{"value":["[122, 90, 81, 62, 36, 41, 50, 46, 115, 2, 123, 92, 72, 33, 53, 65, 12, 50, 88, 52, 82, 59, 24, 108, 80, 19, 64, 89, 48, 61, 90, 103]","988","410"],"var":["pctx","data","len"]},{"value":["[44, 79, 65, 56, 108, 0, 27, 61, 103, 85, 88, 100, 45, 42, 17, 22, 84, 82, 65, 8, 7, 11, 72, 57, 119, 35, 87, 30, 6, 40, 49, 54]","720","808"],"var":["pctx","data","len"]},{"value":["[26, 78, 106, 98, 54, 9, 51, 89, 46, 90, 104, 79, 57, 32, 4, 119, 16, 36, 64, 72, 8, 120, 120, 11, 49, 81, 118, 109, 75, 68, 19, 83]","969","369"],"var":["pctx","data","len"]},{"value":["[118, 104, 13, 76, 74, 38, 113, 110, 7, 9, 36, 20, 41, 40, 30, 67, 76, 72, 63, 113, 45, 55, 56, 123, 30, 88, 28, 62, 99, 66, 55, 21]","748","962"],"var":["pctx","data","len"]},{"value":["[111, 50, 40, 61, 6, 61, 24, 55, 96, 25, 13, 78, 46, 77, 123, 22, 66, 124, 120, 24, 45, 85, 48, 55, 72, 1, 93, 76, 82, 95, 26, 19]","509","543"],"var":["pctx","data","len"]},{"value":["[84, 46, 73, 29, 61, 76, 45, 103, 16, 38, 27, 62, 105, 50, 105, 89, 39, 18, 79, 91, 92, 66, 103, 86, 22, 16, 104, 23, 64, 26, 30, 118]","994","386"],"var":["pctx","data","len"]},{"value":["[99, 3, 53, 49, 82, 118, 107, 2, 99, 106, 33, 28, 13, 94, 7, 79, 35, 25, 39, 121, 42, 15, 61, 103, 94, 108, 50, 92, 70, 113, 36, 67]","738","981"],"var":["pctx","data","len"]},{"value":["[85, 74, 71, 28, 78, 9, 5, 106, 71, 40, 92, 68, 33, 28, 106, 76, 39, 34, 5, 73, 69, 126, 36, 39, 47, 12, 32, 92, 34, 48, 99, 67]","73","713"],"var":["pctx","data","len"]},{"value":["[105, 103, 112, 109, 35, 56, 21, 125, 122, 116, 92, 102, 49, 68, 52, 53, 76, 111, 35, 46, 52, 19, 99, 108, 45, 83, 49, 80, 98, 92, 69, 23]","99","719"],"var":["pctx","data","len"]},{"value":["[114, 14, 19, 73, 74, 37, 74, 113, 95, 85, 37, 94, 123, 2, 27, 35, 122, 91, 15, 15, 16, 87, 2, 27, 32, 90, 84, 118, 22, 14, 115, 120]","876","790"],"var":["pctx","data","len"]},{"value":["[122, 90, 81, 62, 36, 41, 50, 46, 115, 2, 123, 92, 72, 33, 53, 65, 12, 50, 88, 52, 82, 59, 24, 108, 80, 19, 64, 89, 48, 61, 90, 103]","988","410"],"var":["pctx","data","len"]},{"value":["[44, 79, 65, 56, 108, 0, 27, 61, 103, 85, 88, 100, 45, 42, 17, 22, 84, 82, 65, 8, 7, 11, 72, 57, 119, 35, 87, 30, 6, 40, 49, 54]","720","808"],"var":["pctx","data","len"]},{"value":["[26, 78, 106, 98, 54, 9, 51, 89, 46, 90, 104, 79, 57, 32, 4, 119, 16, 36, 64, 72, 8, 120, 120, 11, 49, 81, 118, 109, 75, 68, 19, 83]","969","369"],"var":["pctx","data","len"]},{"value":["[118, 104, 13, 76, 74, 38, 113, 110, 7, 9, 36, 20, 41, 40, 30, 67, 76, 72, 63, 113, 45, 55, 56, 123, 30, 88, 28, 62, 99, 66, 55, 21]","748","962"],"var":["pctx","data","len"]},{"value":["[111, 50, 40, 61, 6, 61, 24, 55, 96, 25, 13, 78, 46, 77, 123, 22, 66, 124, 120, 24, 45, 85, 48, 55, 72, 1, 93, 76, 82, 95, 26, 19]","509","543"],"var":["pctx","data","len"]},{"value":["[84, 46, 73, 29, 61, 76, 45, 103, 16, 38, 27, 62, 105, 50, 105, 89, 39, 18, 79, 91, 92, 66, 103, 86, 22, 16, 104, 23, 64, 26, 30, 118]","994","386"],"var":["pctx","data","len"]},{"value":["[99, 3, 53, 49, 82, 118, 107, 2, 99, 106, 33, 28, 13, 94, 7, 79, 35, 25, 39, 121, 42, 15, 61, 103, 94, 108, 50, 92, 70, 113, 36, 67]","738","981"],"var":["pctx","data","len"]},{"value":["[85, 74, 71, 28, 78, 9, 5, 106, 71, 40, 92, 68, 33, 28, 106, 76, 39, 34, 5, 73, 69, 126, 36, 39, 47, 12, 32, 92, 34, 48, 99, 67]","73","713"],"var":["pctx","data","len"]},{"value":["[105, 103, 112, 109, 35, 56, 21, 125, 122, 116, 92, 102, 49, 68, 52, 53, 76, 111, 35, 46, 52, 19, 99, 108, 45, 83, 49, 80, 98, 92, 69, 23]","99","719"],"var":["pctx","data","len"]},{"value":["[114, 14, 19, 73, 74, 37, 74, 113, 95, 85, 37, 94, 123, 2, 27, 35, 122, 91, 15, 15, 16, 87, 2, 27, 32, 90, 84, 118, 22, 14, 115, 120]","876","790"],"var":["pctx","data","len"]},{"value":["[122, 90, 81, 62, 36, 41, 50, 46, 115, 2, 123, 92, 72, 33, 53, 65, 12, 50, 88, 52, 82, 59, 24, 108, 80, 19, 64, 89, 48, 61, 90, 103]","988","410"],"var":["pctx","data","len"]}],"output":[{"value":["208","[44, 79, 65, 56, 108, 0, 27, 61, 103, 85, 88, 100, 45, 42, 17, 22, 84, 82, 65, 8, 7, 11, 72, 57, 119, 35, 87, 30, 6, 40, 49, 54]"],"var":["data","pctx"]},{"value":["201","[26, 78, 106, 98, 54, 9, 51, 89, 46, 90, 104, 79, 57, 32, 4, 119, 16, 36, 64, 72, 8, 120, 120, 11, 49, 81, 118, 109, 75, 68, 19, 83]"],"var":["data","pctx"]},{"value":["236","[118, 104, 13, 76, 74, 38, 113, 110, 7, 9, 36, 20, 41, 40, 30, 67, 76, 72, 63, 113, 45, 55, 56, 123, 30, 88, 28, 62, 99, 66, 55, 21]"],"var":["data","pctx"]},{"value":["253","[111, 50, 40, 61, 6, 61, 24, 55, 96, 25, 13, 78, 46, 77, 123, 22, 66, 124, 120, 24, 45, 85, 48, 55, 72, 1, 93, 76, 82, 95, 26, 19]"],"var":["data","pctx"]},{"value":["226","[84, 46, 73, 29, 61, 76, 45, 103, 16, 38, 27, 62, 105, 50, 105, 89, 39, 18, 79, 91, 92, 66, 103, 86, 22, 16, 104, 23, 64, 26, 30, 118]"],"var":["data","pctx"]},{"value":["226","[99, 3, 53, 49, 82, 118, 107, 2, 99, 106, 33, 28, 13, 94, 7, 79, 35, 25, 39, 121, 42, 15, 61, 103, 94, 108, 50, 92, 70, 113, 36, 67]"],"var":["data","pctx"]},{"value":["73","[85, 74, 71, 28, 78, 9, 5, 106, 71, 40, 92, 68, 33, 28, 106, 76, 39, 34, 5, 73, 69, 126, 36, 39, 47, 12, 32, 92, 34, 48, 99, 67]"],"var":["data","pctx"]},{"value":["99","[105, 103, 112, 109, 35, 56, 21, 125, 122, 116, 92, 102, 49, 68, 52, 53, 76, 111, 35, 46, 52, 19, 99, 108, 45, 83, 49, 80, 98, 92, 69, 23]"],"var":["data","pctx"]},{"value":["108","[114, 14, 19, 73, 74, 37, 74, 113, 95, 85, 37, 94, 123, 2, 27, 35, 122, 91, 15, 15, 16, 87, 2, 27, 32, 90, 84, 118, 22, 14, 115, 120]"],"var":["data","pctx"]},{"value":["220","[122, 90, 81, 62, 36, 41, 50, 46, 115, 2, 123, 92, 72, 33, 53, 65, 12, 50, 88, 52, 82, 59, 24, 108, 80, 19, 64, 89, 48, 61, 90, 103]"],"var":["data","pctx"]},{"value":["208","[44, 79, 65, 56, 108, 0, 27, 61, 103, 85, 88, 100, 45, 42, 17, 22, 84, 82, 65, 8, 7, 11, 72, 57, 119, 35, 87, 30, 6, 40, 49, 54]"],"var":["data","pctx"]},{"value":["201","[26, 78, 106, 98, 54, 9, 51, 89, 46, 90, 104, 79, 57, 32, 4, 119, 16, 36, 64, 72, 8, 120, 120, 11, 49, 81, 118, 109, 75, 68, 19, 83]"],"var":["data","pctx"]},{"value":["236","[118, 104, 13, 76, 74, 38, 113, 110, 7, 9, 36, 20, 41, 40, 30, 67, 76, 72, 63, 113, 45, 55, 56, 123, 30, 88, 28, 62, 99, 66, 55, 21]"],"var":["data","pctx"]},{"value":["253","[111, 50, 40, 61, 6, 61, 24, 55, 96, 25, 13, 78, 46, 77, 123, 22, 66, 124, 120, 24, 45, 85, 48, 55, 72, 1, 93, 76, 82, 95, 26, 19]"],"var":["data","pctx"]},{"value":["226","[84, 46, 73, 29, 61, 76, 45, 103, 16, 38, 27, 62, 105, 50, 105, 89, 39, 18, 79, 91, 92, 66, 103, 86, 22, 16, 104, 23, 64, 26, 30, 118]"],"var":["data","pctx"]},{"value":["226","[99, 3, 53, 49, 82, 118, 107, 2, 99, 106, 33, 28, 13, 94, 7, 79, 35, 25, 39, 121, 42, 15, 61, 103, 94, 108, 50, 92, 70, 113, 36, 67]"],"var":["data","pctx"]},{"value":["73","[85, 74, 71, 28, 78, 9, 5, 106, 71, 40, 92, 68, 33, 28, 106, 76, 39, 34, 5, 73, 69, 126, 36, 39, 47, 12, 32, 92, 34, 48, 99, 67]"],"var":["data","pctx"]},{"value":["99","[105, 103, 112, 109, 35, 56, 21, 125, 122, 116, 92, 102, 49, 68, 52, 53, 76, 111, 35, 46, 52, 19, 99, 108, 45, 83, 49, 80, 98, 92, 69, 23]"],"var":["data","pctx"]},{"value":["108","[114, 14, 19, 73, 74, 37, 74, 113, 95, 85, 37, 94, 123, 2, 27, 35, 122, 91, 15, 15, 16, 87, 2, 27, 32, 90, 84, 118, 22, 14, 115, 120]"],"var":["data","pctx"]},{"value":["220","[122, 90, 81, 62, 36, 41, 50, 46, 115, 2, 123, 92, 72, 33, 53, 65, 12, 50, 88, 52, 82, 59, 24, 108, 80, 19, 64, 89, 48, 61, 90, 103]"],"var":["data","pctx"]},{"value":["208","[44, 79, 65, 56, 108, 0, 27, 61, 103, 85, 88, 100, 45, 42, 17, 22, 84, 82, 65, 8, 7, 11, 72, 57, 119, 35, 87, 30, 6, 40, 49, 54]"],"var":["data","pctx"]},{"value":["201","[26, 78, 106, 98, 54, 9, 51, 89, 46, 90, 104, 79, 57, 32, 4, 119, 16, 36, 64, 72, 8, 120, 120, 11, 49, 81, 118, 109, 75, 68, 19, 83]"],"var":["data","pctx"]},{"value":["236","[118, 104, 13, 76, 74, 38, 113, 110, 7, 9, 36, 20, 41, 40, 30, 67, 76, 72, 63, 113, 45, 55, 56, 123, 30, 88, 28, 62, 99, 66, 55, 21]"],"var":["data","pctx"]},{"value":["253","[111, 50, 40, 61, 6, 61, 24, 55, 96, 25, 13, 78, 46, 77, 123, 22, 66, 124, 120, 24, 45, 85, 48, 55, 72, 1, 93, 76, 82, 95, 26, 19]"],"var":["data","pctx"]},{"value":["226","[84, 46, 73, 29, 61, 76, 45, 103, 16, 38, 27, 62, 105, 50, 105, 89, 39, 18, 79, 91, 92, 66, 103, 86, 22, 16, 104, 23, 64, 26, 30, 118]"],"var":["data","pctx"]},{"value":["226","[99, 3, 53, 49, 82, 118, 107, 2, 99, 106, 33, 28, 13, 94, 7, 79, 35, 25, 39, 121, 42, 15, 61, 103, 94, 108, 50, 92, 70, 113, 36, 67]"],"var":["data","pctx"]},{"value":["73","[85, 74, 71, 28, 78, 9, 5, 106, 71, 40, 92, 68, 33, 28, 106, 76, 39, 34, 5, 73, 69, 126, 36, 39, 47, 12, 32, 92, 34, 48, 99, 67]"],"var":["data","pctx"]},{"value":["99","[105, 103, 112, 109, 35, 56, 21, 125, 122, 116, 92, 102, 49, 68, 52, 53, 76, 111, 35, 46, 52, 19, 99, 108, 45, 83, 49, 80, 98, 92, 69, 23]"],"var":["data","pctx"]},{"value":["108","[114, 14, 19, 73, 74, 37, 74, 113, 95, 85, 37, 94, 123, 2, 27, 35, 122, 91, 15, 15, 16, 87, 2, 27, 32, 90, 84, 118, 22, 14, 115, 120]"],"var":["data","pctx"]},{"value":["220","[122, 90, 81, 62, 36, 41, 50, 46, 115, 2, 123, 92, 72, 33, 53, 65, 12, 50, 88, 52, 82, 59, 24, 108, 80, 19, 64, 89, 48, 61, 90, 103]"],"var":["data","pctx"]}]},"real_io_pairs":null,"synth_exe_wrapper":"extern \"C\" {\n#include \"\/run\/user\/1000\/pytmpfile_jordiws_3577757t7l7urh5.c\"\n}\n\n#include <vector>\n#include <nlohmann\/json.hpp>\n#include <fstream>\n#include <iomanip>\n#include <clib\/synthesizer.h>\n#include <time.h>\n#include <math.h>\n#include <iostream>\nchar* output_file;\nchar* pre_accel_dump_file;  \/\/ optional dump file.\nusing json = nlohmann::json;\nconst char* __asan_default_options() {\n  return \"detect_leaks=0\";\n}\n\nclock_t AcceleratorStart;\nclock_t AcceleratorTotalNanos = 0;\nvoid StartAcceleratorTimer() {\n  AcceleratorStart = clock();\n}\n\nvoid StopAcceleratorTimer() {\n  AcceleratorTotalNanos += (clock()) - AcceleratorStart;\n}\n\nvoid write_output(int* pctx, unsigned char data, unsigned long int len) {\n  json output_json;\n  std::vector<json> output_temp_2;\n  for (unsigned int i3 = 0; i3 < 32; i3++) {\n    int output_temp_4 = pctx[i3];\n\n    output_temp_2.push_back(output_temp_4);\n  }\n  output_json[\"pctx\"] = output_temp_2;\n\n  output_json[\"data\"] = data;\n  std::ofstream out_str(output_file);\n  out_str << std::setw(4) << output_json << std::endl;\n}\nint main(int argc, char** argv) {\n  char* inpname = argv[1];\n  output_file = argv[2];\n\n  std::ifstream ifs(inpname);\n  json input_json = json::parse(ifs);\n  std::vector<int> input_temp_1_vec;\n  for (auto& elem : input_json[\"pctx\"]) {\n    int input_temp_1_inner = elem;\n    input_temp_1_vec.push_back(input_temp_1_inner);\n  }\n  int* pctx = &input_temp_1_vec[0];\n  unsigned char data = input_json[\"data\"];\n  unsigned long int len = input_json[\"len\"];\n  clock_t begin = clock();\n  int(**casted_pctx) = (int(**))pctx;\n  cc_none2(casted_pctx, data, len);\n  pctx = (int(*))casted_pctx;\n  clock_t end = clock();\n  std::cout << \"Time: \" << (double)(end - begin) \/ CLOCKS_PER_SEC << std::endl;\n  std::cout << \"AccTime: \" << (double)AcceleratorTotalNanos \/ CLOCKS_PER_SEC << std::endl;\n  write_output(pctx, data, len);\n}","real_exe_wrapper":null,"ref":"master","synth_iospec":"{\"livein\": [\"pctx\", \"data\", \"len\"], \"liveout\": [\"pctx\", \"data\"], \"returnvarname\": [], \"execcmd\": \"\", \"funname\": \"cc_none2\", \"funargs\": [\"pctx\", \"data\", \"len\"], \"typemap\": {\"pctx\": \"array(int32#32)\", \"data\": \"uint8\", \"len\": \"uint64\"}, \"required_includes\": [\"\/run\/user\/1000\/pytmpfile_jordiws_3577757t7l7urh5.c\"], \"classmap\": {}, \"range\": {}, \"needs_cast\": {\"pctx\": {\"old_type\": \"int\", \"new_type\": \"int\", \"dims\": [\"*\", \"*\"]}}, \"globals\": []}","real_iospec":"null","llvm_ir":{"bb_count":{"bb_list_size":[1],"bbcount":1,"func_name":"cc_none2"},"code":["; ModuleID = '\/tmp\/exebench_lscat-ACT41_2020645x8b9oqju.c.ll'\nsource_filename = \"\/tmp\/exebench_lscat-ACT41_2020645x8b9oqju.c\"\ntarget datalayout = \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\ntarget triple = \"x86_64-unknown-linux-gnu\"\n\n; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable\ndefine hidden void @cc_none2(ptr nocapture %pctx, ptr nocapture %data, i64 %len) #0 {\nentry:\n  ret void\n}\n\nattributes #0 = { mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable \"min-legal-vector-width\"=\"0\" \"no-trapping-math\"=\"true\" \"stack-protector-buffer-size\"=\"8\" \"target-cpu\"=\"x86-64\" \"target-features\"=\"+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87\" \"tune-cpu\"=\"generic\" }\n\n!llvm.module.flags = !{!0, !1, !2, !3}\n!llvm.ident = !{!4}\n\n!0 = !{i32 1, !\"wchar_size\", i32 4}\n!1 = !{i32 8, !\"PIC Level\", i32 2}\n!2 = !{i32 7, !\"PIE Level\", i32 2}\n!3 = !{i32 7, !\"uwtable\", i32 2}\n!4 = !{!\"clang version 17.0.0 (https:\/\/github.com\/llvm\/llvm-project.git 88bf774c565080e30e0a073676c316ab175303af)\"}\n"],"target":["clang15_x86-O2"]},"asm_len":267}
